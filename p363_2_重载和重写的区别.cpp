/*
重载和重写的区别是什么？
	重载。重载是指允许同时存在多个同名函数，而这些函数的参数表不同(或许参数个数不同，或许参数
类型不同，或许两者都不同)
	重写。重写是指子类重新定义父类虚函数的方法。

从实现原理来说，两者的区别如下：
	重载。重载编程器根据函数声明中的不同的参数表，对同名函数的名称做修饰，然后这些
同名函数就成了不同的函数。例如，有两个同名函数 void func(int n) 和 void func(string str)，
虽然这两个函数的名称都是func，但是经过编译器修饰后的函数名称可能是这样的：int_func 和 str_func。
对于这两个函数的调用，在编译期间就已经确定了，它们是静态的。也就是说，它们的地址在编译器就绑定了，
因此，重载和多态无关。
	重写。重写和多态真正相关。当子类重新定义了父类的虚函数后，父类指针根据赋给它的不同
子类指针动态地调用属于子类的该函数，这样的函数调用在编译器是无法确定的。因此，这样的函数地址
是在运行期绑定的。
*/